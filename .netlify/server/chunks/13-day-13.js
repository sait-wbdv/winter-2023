import { c as create_ssr_component } from './index.js';

/* src/lib/content/courses/cpnt-262/13-day-13.md generated by Svelte v3.55.0 */

const metadata = {
	"title": "v-bind and v-on",
	"excerpt": null,
	"status": "draft"
};

const _13_day_13 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	return `<h2 id="${"javascript-warmups-functions-20-min--10min-debrief"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#javascript-warmups-functions-20-min--10min-debrief"}"><span class="${"icon icon-link"}"></span></a>Javascript Warmups: Functions (20 min + 10min debrief)</h2>
<ul><li><a href="${"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions"}" rel="${"nofollow"}">Activity Link</a><ul><li>Create functions that make conditional logic reusable</li></ul></li></ul>
<h3 id="${"debrief-questions"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#debrief-questions"}"><span class="${"icon icon-link"}"></span></a>Debrief Questions</h3>
<ul><li>What kind of use cases could you use this logic on a web page? (<em>each group will need to discuss at least 1 of their solutions</em>)</li>
<li>What are your preferences for syntax style? and why?</li></ul>
<hr>
<h2 id="${"vue-directives"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#vue-directives"}"><span class="${"icon icon-link"}"></span></a>Vue Directives</h2>
<p>Vue Directives are used to render and manipulate data on a page. The most common is the <a href="${"https://vuejs.org/api/built-in-directives.html#v-bind"}" rel="${"nofollow"}">v-bind</a> which we discussed yesterday.</p>
<h3 id="${"v-bind-and-attributes"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#v-bind-and-attributes"}"><span class="${"icon icon-link"}"></span></a>V-bind and Attributes</h3>
<ul><li>Render text from JS using double moustach syntax <code>{{ variableName }}</code></li>
<li>Pass JS variables to attributes using <code>v-bind:</code> or <code>:</code>. ex: <code>&lt;img :src=&quot;varName.src&quot; :alt=&quot;varName.alt&quot; /&gt;</code></li>
<li>Bind <a href="${"https://vuejs.org/api/sfc-css-features.html#v-bind-in-css"}" rel="${"nofollow"}">css styles</a><ul><li>See an example using functions <a href="${"https://github.com/sait-wbdv/f22-vue-content"}" rel="${"nofollow"}">here</a></li></ul></li>
<li>pass props to components (what we will do after lunch)</li></ul>
<h3 id="${"activity-bind-two-attributes"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#activity-bind-two-attributes"}"><span class="${"icon icon-link"}"></span></a>Activity: Bind Two Attributes</h3>
<ul><li>Bind an image’s src and alt tags to an an object<ul><li>example object: <code>const image = {url: &#39;https://imageurl.com&#39;, alt: &#39;this is some text&#39;}</code></li></ul></li>
<li>Bind a class to styles declared in a variable<ul><li>example variable: <code>const textStyle = &#39;text-2xl text-red-200&#39;</code></li>
<li><em>if the first example is comfortable, try using a conditional to determine the styles of a variable</em></li></ul></li></ul>
<h2 id="${"setting-up-eslint-and-prettier-with-vue-and-tailwind"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#setting-up-eslint-and-prettier-with-vue-and-tailwind"}"><span class="${"icon icon-link"}"></span></a>Setting up Eslint and Prettier with Vue and Tailwind</h2>
<ul><li><a href="${"https://github.com/sait-wbdv/f22-vue-content/tree/utils"}" rel="${"nofollow"}">Ashlyn’s Utils branch</a><ul><li>This branch has tips in the readme plus functioning code examples (will be merged to main after class)</li></ul></li></ul>
<h2 id="${"lab-time"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#lab-time"}"><span class="${"icon icon-link"}"></span></a>Lab Time</h2>
<ul><li><a href="${"https://vuejs.org/tutorial/#step-1"}" rel="${"nofollow"}">Vue Tutorial</a>: Structured 15 step set of activities</li>
<li>Create new “views” and add them to the router <a href="${"https://router.vuejs.org/"}" rel="${"nofollow"}">docs</a></li>
<li>Create a number counter with v-on</li>
<li>Make variables change color depending on the state of a switch that is controlled using v-on</li></ul>
<hr>
<h2 id="${"homework"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#homework"}"><span class="${"icon icon-link"}"></span></a>Homework</h2>
<ul><li>Read <a href="${"https://vuejs.org/guide/essentials/component-basics.html"}" rel="${"nofollow"}">Components Basics</a></li>
<li>Read <a href="${"https://vuejs.org/guide/essentials/reactivity-fundamentals.html"}" rel="${"nofollow"}">Reactivity Fundamentals</a></li>
<li>Watch <a href="${"https://www.youtube.com/watch?v=9wKivv-vvhU"}" rel="${"nofollow"}">Every new Vue Developer has made these mistakes</a><ul><li>Programming with Erik has a lot of great Vue content</li></ul></li></ul>`;
});

export { _13_day_13 as default, metadata };

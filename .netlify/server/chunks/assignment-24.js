import { c as create_ssr_component } from './index.js';

/* src/lib/content/assessments/cpnt-262/assignment-2.md generated by Svelte v3.55.0 */

const metadata = {
	"title": "Assignment 2 - If This, Then That (forms)",
	"type": "assignment",
	"points": 5
};

const Assignment_2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	return `<p>In this assignment, you create a form that dynamically changes some aspect of the page.</p>
<p>While you can use open-source content as inspiration, it should be unique and on-topic.</p>
<h2 id="${"content-topic"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#content-topic"}"><span class="${"icon icon-link"}"></span></a>Content Topic</h2>
<p>The goal of this assignment is to use HTML form elements to trigger dynamic changes to its page using Javascript.</p>
<p>For example, you may create:</p>
<ul><li>a drop down menu that highlights different page content depending on the menu selection;</li>
<li>a radio button list that changes the page’s colour scheme;</li>
<li>a form that shows different options based on a previous form input;<ul><li>Example: If “favourite pet” is “dog” show a list of checkboxes to select the “best breeds”.</li></ul></li>
<li>etc.</li></ul>
<p>The content should make sense and be of potential value to the (hypothetical) reader.</p>
<p><strong>Note: the page can contain other content that does not distract from the assignment requirements.</strong> Feel free to re-purpose past assignments or projects.</p>
<hr>
<h2 id="${"instructions"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#instructions"}"><span class="${"icon icon-link"}"></span></a>Instructions</h2>
<p>Place your app in a validated HTML file named <code>index.html</code>:</p>
<ul><li>JS should linked as a deferred external <code>&lt;script&gt;</code> in the <code>&lt;head&gt;</code> of the document;</li>
<li>CSS should be linked as an external stylesheet in a <code>&lt;link&gt;</code> element in the <code>&lt;head&gt;</code> of the document.</li></ul>
<hr>
<h2 id="${"marking-rubric"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#marking-rubric"}"><span class="${"icon icon-link"}"></span></a>Marking Rubric</h2>
<p><strong>Each of the following requirements will be worth 1 point</strong> for a total of 5 points. </p>
<h3 id="${"1-form-controls-with-event-listener"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#1-form-controls-with-event-listener"}"><span class="${"icon icon-link"}"></span></a>1. Form control(s) with event listener</h3>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Create a dropdown menu, radio button list or other appropriate form control;<ul><li>Proper <code>&lt;label&gt;</code> and <code>&lt;fieldset&gt;</code>/<code>&lt;legend&gt;</code> elements should be provided for accessibility;</li>
<li>See: <a href="${"https://sait-wbdv.github.io/slides/f22/cpnt-262/js-forms.html#/1"}" rel="${"nofollow"}">Accessible forms</a> for further guidelines;</li>
<li>Required fields need the <code>required</code> attribute with a visual indication to the user that it is required.</li></ul></li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Optional: Use <code>&lt;form&gt;</code> element, if appropriate;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Add an appropriate event listener that triggers a change in the page;</li></ul>
<h3 id="${"2-dom-manipulation"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#2-dom-manipulation"}"><span class="${"icon icon-link"}"></span></a>2. DOM Manipulation</h3>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Change content on the page using on or more of the following methods:<ul><li>Change <code>:root</code>-level CSS Variables using Javascript’s <code>Element.style.setProperty()</code> method, OR;</li>
<li>Use <code>Element.classList</code> to modify an element’s presentation;</li></ul></li></ul>
<h3 id="${"3-three-states"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#3-three-states"}"><span class="${"icon icon-link"}"></span></a>3. Three states</h3>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Create three different page states that are controlled using the form control(s). Based on the above Content Topic examples there should be at least three:<ul><li>colour schemes;</li>
<li>menu options with page effects;</li>
<li>conditional form options.</li></ul></li></ul>
<h3 id="${"4-above-and-beyond"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#4-above-and-beyond"}"><span class="${"icon icon-link"}"></span></a>4. Above and Beyond</h3>
<p>Show off your coding skills by using ONE (use of more than one does not guarantee more marks) of the following:</p>
<ul><li><strong>Animation</strong>: have your page change fade/slide in/out of the page, for example, OR;</li>
<li><strong>Custom form styling</strong>: using a method of your choice, create a custom checkbox or radio button instead of the default styling, OR;</li>
<li><strong>Figma prototype</strong>: include a link to a matching Figma prototype of your project.</li></ul>
<p>Provide a clear indication of which option you’ve chosen in your README (see below):</p>
<ul><li>Which did you choose?</li>
<li>What file(s) and line number(s) can it be found?</li></ul>
<h3 id="${"5-documentation-and-code-quality"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#5-documentation-and-code-quality"}"><span class="${"icon icon-link"}"></span></a>5. Documentation and Code Quality</h3>
<p><strong>In addition to the standard requirements</strong>, include the a TODO comment in your Javascript that:</p>
<ul><li>summarizes a feature you’d like to add to the project, OR;</li>
<li>outlines how a code segment can be refactored, OR;</li>
<li>highlights a bug that needs to be fixed;</li></ul>
<p>Example:</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token comment">// TODO: Move function to js/utilities.js</span>
<span class="token keyword">const</span> <span class="token function-variable function">someFunction</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"I'm a function!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<p><strong>Standard Requirements:</strong></p>
<ul><li>Include a <code>README.md</code> in your project that contains the following information:<ul><li>Course title;</li>
<li>Assignment name;</li>
<li>Author name;</li>
<li>A link to the GH Pages site</li></ul></li>
<li><strong>Important</strong>: Any attributions for code and/or assets you used that are not your own;</li>
<li>Follow guidelines in <a href="${"https://sait-wbdv.github.io/slides/f22/cpnt-262/js-introduction.html"}" rel="${"nofollow"}">Javascript Basics</a> slides;</li>
<li>Follow guidelines in <a href="${"https://gist.github.com/acidtone/d77059ec1851eff266339a3df70f6984"}" rel="${"nofollow"}">Files and Directories - Naming Conventions</a></li></ul>
<hr>
<h2 id="${"submission-requirements"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#submission-requirements"}"><span class="${"icon icon-link"}"></span></a>Submission Requirements</h2>
<ul><li>Push this assignment to a GitHub repo named <code>cpnt262-a2</code> and enable GitHub Pages;</li>
<li>ZIP all files required for the site to operate and submit to Brightspace;</li>
<li>Include the following as a comment in your Brightspace submission:<ul><li>GH repo</li>
<li>GH Pages site</li></ul></li></ul>`;
});

export { Assignment_2 as default, metadata };

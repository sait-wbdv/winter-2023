import { c as create_ssr_component } from './index.js';

/* src/lib/content/assessments/cpnt-201/achievements-2.md generated by Svelte v3.55.0 */

const metadata = {
	"title": "Achievements Round 2 NPM",
	"type": "achievements",
	"points": 10
};

const Achievements_2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	return `<h2 id="${"marking-rubric"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#marking-rubric"}"><span class="${"icon icon-link"}"></span></a>Marking Rubric</h2>
<p>Same as <a href="${"achievements-1"}">Round 1</a>, except:</p>
<ul><li>Submissions for Achievements Round 2 will close Thursday November 10th @ 11:59pm;</li>
<li>Achievements from Round 1 are <strong>not eligible</strong> for this Round.</li></ul>
<hr>
<h2 id="${"achievements"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#achievements"}"><span class="${"icon icon-link"}"></span></a>Achievements</h2>
<p>Submission Instructions:</p>
<ol><li>In Brightspace: submit a ZIP of relevant files to <em>Round 2</em>;</li>
<li>As a comment: share links to make it easy for the instructor to quickly evaluate your work:<ul><li>GH repos</li></ul></li>
<li>Double check the Achievement for specific instructions.</li>
<li>Submit Achievements as you finish them, or all at once</li></ol>
<hr>
<h3 id="${"tutorial-framework-session"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#tutorial-framework-session"}"><span class="${"icon icon-link"}"></span></a>Tutorial Framework Session</h3>
<ul><li>Find a tutorial on how to set up a javascript frontend framework<ul><li>aim for 20min-1hour tutorials</li></ul></li>
<li>Write a journal entry in your README on what topics made sense and where you ran into trouble while working through the tutorial (points must be specific and have details)</li>
<li>Add a link to a deployed page if you managed to deploy</li></ul>
<hr>
<h2 id="${"plugin-away"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#plugin-away"}"><span class="${"icon icon-link"}"></span></a>Plugin Away</h2>
<p>3rd-party plugin/library implementation. Install any of the plugins that you used previously in the course via cdn as an npm package.</p>
<p><strong>Instructions</strong></p>
<ol><li>Create a web page in github<ul><li>This should be consistent with your workflow from 260 and 262</li></ul></li>
<li>Add node to your project with <code>npm init</code></li>
<li>Add the plugin or library as documented</li>
<li>Use the plugin somewhere on your page (make it clear where this is and what is intended in your submission notes)</li></ol>
<p><strong>Submissions needed</strong>
Got a good tutorial you’d like to submit for marks? Ask your Instructor about adding it onto the list.</p>
<ul><li><strong>Bonus: 5 points</strong> for anyone who finds and adequate plugin to add to the list.</li></ul>
<hr>
<h2 id="${"add-a-css-framework-to-a-project"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#add-a-css-framework-to-a-project"}"><span class="${"icon icon-link"}"></span></a>Add a CSS Framework to a project</h2>
<ul><li><strong>You cannot use tailwind for this</strong><ul><li>options include:<ul><li>Bootstrap</li>
<li>WindiCSS</li>
<li>Bulma</li>
<li>and many more!</li></ul></li></ul></li>
<li>As discussed in class, there are many was to style a webpage. Check out one of the other css frameworks or UI kits that exist and add it to a web page</li></ul>
<p><strong>Requirements</strong></p>
<ul><li>2 sections of content need to be styled using the css framework<ul><li>ie: header and a set of cards</li></ul></li>
<li>Content must be mobile responsive</li>
<li>Use practices outlined in the documentation</li></ul>
<hr>
<h2 id="${"create-a-node-express-hello-world-project"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#create-a-node-express-hello-world-project"}"><span class="${"icon icon-link"}"></span></a>Create a Node Express Hello-World Project</h2>
<ul><li>Node is Javascript on the backend, and while we don’t have to manually build backends for many projects, it is good to know the basics of how they work</li>
<li>Skim the <a href="${"https://expressjs.com/"}" rel="${"nofollow"}">Node Express Documentation</a> and follow it’s <a href="${"https://expressjs.com/en/starter/installing.html"}" rel="${"nofollow"}">Getting Started Guide</a> to create a hellow world example</li></ul>
<h3 id="${"requirements"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#requirements"}"><span class="${"icon icon-link"}"></span></a>Requirements</h3>
<ul><li>The server can serve content on localhost</li>
<li>All the instructions were followed in the docs</li>
<li>Document your process in the README.md file</li></ul>
<hr>
<h2 id="${"basic-algorithm-scripting"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#basic-algorithm-scripting"}"><span class="${"icon icon-link"}"></span></a>Basic Algorithm Scripting</h2>
<p>Improve your Javascript Skills!</p>
<h3 id="${"instructions"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#instructions"}"><span class="${"icon icon-link"}"></span></a>Instructions</h3>
<ul><li>Complete 5-16 exercises from <a href="${"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#basic-algorithm-scripting"}" rel="${"nofollow"}">Basic Algorithm Scripting</a></li>
<li>Add your solutions to individual javascript files</li>
<li>Set this up as an npm project and git repo</li>
<li>Add scripts that run the files that you’ve created</li>
<li>**Copy Pastes of the solutions that FCC offers will be treated as plagiarism</li></ul>
<h3 id="${"bonus"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#bonus"}"><span class="${"icon icon-link"}"></span></a>Bonus</h3>
<ul><li>Make the files take user input and calculate responses</li></ul>
<h3 id="${"more-scripting"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#more-scripting"}"><span class="${"icon icon-link"}"></span></a>More Scripting</h3>
<ul><li>This achievement can also be done with the Object Oriented, Functional, and Intermediate Scripting Modules</li></ul>`;
});

export { Achievements_2 as default, metadata };

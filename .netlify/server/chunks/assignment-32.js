import { c as create_ssr_component } from './index.js';

/* src/lib/content/assessments/cpnt-260/assignment-3.md generated by Svelte v3.55.0 */

const metadata = {
	"title": "Assignment 3 - 404 Page Not Found",
	"type": "assignment",
	"points": 10
};

const Assignment_3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	return `<p>In this assignment, you will be creating a full-page layout of a 404 page!</p>
<h2 id="${"content-topic"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#content-topic"}"><span class="${"icon icon-link"}"></span></a>Content topic</h2>
<p>The goal of this assignment is to notify a hypothetical user that their page was not found.</p>
<ul><li>Choose a site title, owner, concept for your site;</li>
<li>Choose a list of four (or more) your primary navigation menu;<ul><li>You do not have to create content for any other pages;</li>
<li>Link to <code>#</code> or choose an external site of your choice.</li></ul></li>
<li>Make it funny/pretty/useful!</li></ul>
<hr>
<h2 id="${"instructions"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#instructions"}"><span class="${"icon icon-link"}"></span></a>Instructions</h2>
<ol><li>Create a <a href="${"https://gist.github.com/acidtone/6871979b4f4b04375edb6312dcdba5b7"}" rel="${"nofollow"}"><code>index.html</code></a> page with the following semantic elements:<ul><li><code>&lt;header&gt;</code> - Site title<ul><li>But do <em>not</em> put it in a heading;</li></ul></li>
<li><code>&lt;nav&gt;</code> - See Rubric</li>
<li><code>&lt;main&gt;</code> - Page content in a <code>h1</code> (or similar):<blockquote><p>“404 page not found”</p></blockquote></li>
<li><code>&lt;footer&gt;</code> - See Rubric</li></ul></li>
<li>Use <a href="${"https://validator.w3.org/"}" rel="${"nofollow"}">valid HTML</a> and <a href="${"https://jigsaw.w3.org/css-validator/"}" rel="${"nofollow"}">CSS</a>;<ul><li>CSS must be linked externally in an <code>./css/[style|main|etc].css</code>;</li></ul></li>
<li>Design a full page layout of a site’s 404 page according to the requirements listed below.</li></ol>
<hr>
<h2 id="${"marking-rubric"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#marking-rubric"}"><span class="${"icon icon-link"}"></span></a>Marking Rubric</h2>
<p><strong>Each of the following requirements will be worth 2 points</strong> for a total of 10 points.</p>
<h3 id="${"1-flexbox-navigation"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#1-flexbox-navigation"}"><span class="${"icon icon-link"}"></span></a>1. Flexbox navigation</h3>
<p>Build a horizontal primary navigation menu that:</p>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> is accessible (see below);</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> uses colour and the box model to make links obviously and easily clickable;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> uses a <code>&lt;ul&gt;</code> as a flex container and <code>&lt;li&gt;</code> as items;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> justify the links to fit your design.</li></ul>
<h3 id="${"2-sticky-footer"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#2-sticky-footer"}"><span class="${"icon icon-link"}"></span></a>2. Sticky footer</h3>
<p>Build a footer sticks to the bottom of a short page:</p>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Page content: 404 page not found<ul><li>You may use different content;</li>
<li>Content must not scroll in either direction;</li></ul></li>
<li>Footer:<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Copyright year with <code>©</code></li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Site owner</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Sticks to the bottom of a short page</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Scrolls normally of a long page</li></ul></li></ul>
<h3 id="${"3-responsiveness-and-accessibility"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#3-responsiveness-and-accessibility"}"><span class="${"icon icon-link"}"></span></a>3. Responsiveness and Accessibility</h3>
<p>Your content should be responsive and accessible to screen readers:</p>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> All navigation should be wrapped in a <code>&lt;nav&gt;</code> element;<ul><li><code>&lt;nav&gt;</code> can be nested inside a <code>&lt;header&gt;</code></li></ul></li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Navigation should never overflow horizontally off the screen:<ul><li><code>flex-wrap</code> is a good place to start;</li></ul></li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> The page has a <code>&lt;title&gt;</code>;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> The page content is a readable size.</li></ul>
<p><strong>Plus these</strong>:</p>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Line length should not exceed 40 characters on wide screens;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> No horizontal scroll bars should be visible at any device screen width;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> On mobile, content should be at least <code>0.5rem</code> away from the edge of the screen;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Text should have at least a AA contrast ratio rating for its size;</li></ul>
<h3 id="${"4-above-and-beyond"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#4-above-and-beyond"}"><span class="${"icon icon-link"}"></span></a>4. Above and Beyond</h3>
<p>Show off your coding skills by using ONE (use of more than one does not guarantee more marks) of the following:</p>
<ul><li>add a social navigation menu, OR;</li>
<li>incorporate a hero image (that doesn’t scroll) into your page content, OR;</li>
<li>use a nested flexbox, OR;</li>
<li>Google Map in the footer, OR;</li>
<li>add your primary navigation to the footer.<ul><li>it shouldn’t look like primary navigation.</li></ul></li></ul>
<p>Provide a clear indication of which option you’ve chosen in your README (see below):</p>
<ul><li>Which did you choose?</li>
<li>What file(s) and line number(s) can it be found?</li></ul>
<h3 id="${"5-documentation-and-code-quality"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#5-documentation-and-code-quality"}"><span class="${"icon icon-link"}"></span></a>5. Documentation and Code Quality</h3>
<p>In addition to the standard requirements, include the following in your <code>README.md</code>:</p>
<ul><li>A helpful resource that helped you with this assignment;</li>
<li>the search term you would use to find this resource again.</li></ul>
<p><strong>Plus these</strong>:</p>
<ul><li>Include a <code>README.md</code> at the root of your project that contains the following information:<ul><li>Course title;</li>
<li>Assignment name;</li>
<li>Author name;</li>
<li><strong>GH Pages</strong> site</li>
<li><strong>Attributions</strong> for code and/or assets you used that are not your own.</li></ul></li>
<li>Use best practices with file/directory names and indentation:<ul><li>2 spaces per indent<ul><li>Nested HTML elements and CSS declarations should be indented</li></ul></li>
<li>See: <a href="${"https://gist.github.com/acidtone/d77059ec1851eff266339a3df70f6984"}" rel="${"nofollow"}">Files and Directories - Naming Conventions</a></li></ul></li>
<li>CSS declarations should be organized by category (box model, fonts, borders, flex, etc), separated by a space and commented.</li></ul>
<hr>
<h2 id="${"submission-requirements"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#submission-requirements"}"><span class="${"icon icon-link"}"></span></a>Submission Requirements</h2>
<ul><li>Push this assignment to a GitHub repo named <code>cpnt260-a3</code> and enable GitHub Pages;</li>
<li>ZIP all files required for the site to operate and submit to Brightspace;</li>
<li>Include the following as a comment in your Brightspace submission:<ul><li>GH repo</li>
<li>GH Pages site</li></ul></li></ul>`;
});

export { Assignment_3 as default, metadata };

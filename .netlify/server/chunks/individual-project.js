import { c as create_ssr_component } from './index.js';

/* src/lib/content/assessments/cpnt-262/individual-project.md generated by Svelte v3.55.0 */

const metadata = {
	"title": "Individual Project - Fetching API Data",
	"type": "assignment",
	"points": 15
};

const Individual_project = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	return `<p>In this assignment you’ll be fetching data asynchronously from a <a href="${"https://github.com/public-apis/public-apis"}" rel="${"nofollow"}">public API</a> and displaying in on a web page. You may use an API endpoint of your choice that has not been demonstrated in class. Have fun with it! </p>
<p>Speak to your instructor if you’d like to try something that doesn’t quite fit the requirements listed below.</p>
<hr>
<h2 id="${"instructions"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#instructions"}"><span class="${"icon icon-link"}"></span></a>Instructions</h2>
<ol><li>Choose a JSON API that serves information you’d like to display in your project;<ul><li><a href="${"https://github.com/public-apis/public-apis"}" rel="${"nofollow"}">Full list of Public APIs</a>;</li>
<li><a href="${"#appendix"}">Shortlist of APIs used by past students</a>;</li>
<li>Or you may use an suitable API not found in these lists;</li></ul></li>
<li>Construct an <code>index.html</code> page that will <code>fetch()</code> an array of objects with proper error handling;<ul><li>JS should linked as a deferred external <code>&lt;script&gt;</code> in the <code>&lt;head&gt;</code> of the document;</li>
<li>CSS should be linked as an external stylesheet in a <code>&lt;link&gt;</code> element in the <code>&lt;head&gt;</code> of the document.</li></ul></li>
<li>Use a loop to display either a gallery or chart of the API data on the page;</li></ol>
<hr>
<h2 id="${"marking-rubric"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#marking-rubric"}"><span class="${"icon icon-link"}"></span></a>Marking Rubric</h2>
<p><strong>Each of the following requirements will be worth 3 points</strong> for a total of 15 points. </p>
<h3 id="${"1-fetch-request-and-error-handling"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#1-fetch-request-and-error-handling"}"><span class="${"icon icon-link"}"></span></a>1. <code>fetch()</code> request and error handling</h3>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Using the <code>fetch()</code> Web API retrieve an array or object from a public API using a <code>GET</code> request.<ul><li>Your <code>fetch()</code> can use either <code>then</code>/<code>catch</code> block or <code>async</code>/<code>await</code>;</li></ul></li>
<li>All errors must be handled gracefully:<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Rejected <code>fetch()</code> Promises are handled by a <code>catch</code> block (for example, there is a network error) or similar;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> The request doesn’t return a <code>200 OK</code> response code such as <code>404 Not found</code>.</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> API data validated in case it’s missing, is of an unexpected data type or otherwise <code>undefined</code>.</li>
<li>All errors should be human readable and intuitive. <ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> General “There was a problem.” if data can’t be displayed for any reason;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Data should be validated before output to avoid printing empty or <code>undefined</code> values.</li></ul></li></ul></li></ul>
<h3 id="${"2-loop"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#2-loop"}"><span class="${"icon icon-link"}"></span></a>2. Loop</h3>
<p>The information retrieved should include an array of objects for you to work with.</p>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Use a <code>for</code> loop, or similar statement (see Above and Beyond) to process your data. For example:<ul><li>You can populate an <code>output</code> accumulator variable that contains a gallery for you to display on the page;</li>
<li>You can clean problematic data in your API response;</li>
<li>You can create a simplified/summarized copy of your data to use in a chart.</li></ul></li></ul>
<h3 id="${"3-html-output"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#3-html-output"}"><span class="${"icon icon-link"}"></span></a>3. HTML Output</h3>
<p>You can either:
Display a gallery of at least 10 items on an <code>index.html</code> page, including:</p>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> A name or title<ul><li>Name or title should be displayed in an appropriate heading;</li></ul></li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> An off-site link that’s directly related to the data</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> At least one other property that can be displayed on the page:<ul><li>An image;<ul><li>Image should not be distorted and include a custom <code>alt</code> attribute derived from the retrieved data;</li></ul></li>
<li>A date;<ul><li>Dates (if applicable) should be formatted to be human-readable;   </li></ul></li>
<li>A description, or;</li>
<li>Some other relevant information included in your chosen API:<ul><li>All other data should be displayed appropriately according to the content.</li></ul></li></ul></li></ul>
<p><strong>OR</strong></p>
<p>Display a summary of information in a chart using <a href="${"https://www.chartjs.org/"}" rel="${"nofollow"}">ChartJS</a>, or similar library;</p>
<ul class="${"contains-task-list"}"><li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Chart should be displayed on the page with no scroll bars;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Information displayed in the chart should be derived from the API data;</li>
<li class="${"task-list-item"}"><input type="${"checkbox"}" disabled> Information should be relevant to a real potential user;</li></ul>
<h3 id="${"4-above-and-beyond"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#4-above-and-beyond"}"><span class="${"icon icon-link"}"></span></a>4. Above and Beyond</h3>
<p>Show off your coding skills by using ONE (use of more than one does not guarantee more marks) of the following:</p>
<ul><li>Use an event listener to load your gallery/chart when the user clicks a button instead of on page load;</li>
<li>Use a higher order function such as:<ul><li><code>.forEach()</code> or <code>.map()</code> instead of a <code>for</code> loop;</li>
<li><code>.find()</code> or <code>.filter()</code> to show a subset of items in your gallery;</li></ul></li>
<li>Use a <code>&lt;template&gt;</code> element to store a template of your gallery card HTML instead of using <code>.innerHTML</code>;<ul><li>See <a href="${"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template"}" rel="${"nofollow"}"><code>&lt;template&gt;</code>: The Content Template element</a> on MDN</li></ul></li></ul>
<p><strong>Provide a clear indication</strong> of which option you’ve chosen in your README (see below):</p>
<ul><li>Which did you choose?</li>
<li>What file(s) and line number(s) can it be found?</li></ul>
<h3 id="${"5-documentation-and-code-quality"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#5-documentation-and-code-quality"}"><span class="${"icon icon-link"}"></span></a>5. Documentation and Code Quality</h3>
<p><strong>In addition to the standard requirements</strong>, include a sample of a javascript object served by your chosen API in a <a href="${"https://www.markdownguide.org/extended-syntax/#fenced-code-blocks"}" rel="${"nofollow"}">code block in markdown</a>.</p>
<ul><li>See <a href="${"#example-api-sample"}">example in the appendix</a></li></ul>
<p><strong>Standard Requirements:</strong></p>
<ul><li>Include a <code>README.md</code> in your project that contains the following information:<ul><li>Course title;</li>
<li>Assignment name;</li>
<li>Author name;</li>
<li>A link to the GH Pages site</li></ul></li>
<li><strong>Important</strong>: Any attributions for code and/or assets you used that are not your own;</li>
<li>Follow guidelines in <a href="${"https://sait-wbdv.github.io/slides/f22/cpnt-262/js-introduction.html"}" rel="${"nofollow"}">Javascript Basics</a> slides;</li>
<li>Follow guidelines in <a href="${"https://gist.github.com/acidtone/d77059ec1851eff266339a3df70f6984"}" rel="${"nofollow"}">Files and Directories - Naming Conventions</a></li></ul>
<hr>
<h2 id="${"submission-requirements"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#submission-requirements"}"><span class="${"icon icon-link"}"></span></a>Submission Requirements</h2>
<ul><li>Push this assignment to a GitHub repo named <code>cpnt262-individual-project</code> and enable GitHub Pages;</li>
<li>ZIP all files required for the site to operate and submit to Brightspace;</li>
<li>Include the following as a comment in your Brightspace submission:<ul><li>GH repo</li>
<li>GH Pages site</li>
<li>Link to the API used on your project</li></ul></li></ul>
<hr>
<h2 id="${"appendix"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#appendix"}"><span class="${"icon icon-link"}"></span></a>Appendix</h2>
<h3 id="${"example-api-sample"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#example-api-sample"}"><span class="${"icon icon-link"}"></span></a>Example API Sample</h3>
<p>A Disney character returned by the <a href="${"https://disneyapi.dev/"}" rel="${"nofollow"}">Disney API</a>:</p>
<pre class="${"language-js"}"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token punctuation">&#123;</span>
  <span class="token literal-property property">films</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">shortFilms</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">tvShows</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">"Pickle and Peanut"</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">videoGames</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parkAttractions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">allies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enemies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"90's Adventure Bear"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">imageUrl</span><span class="token operator">:</span> <span class="token string">"https://static.wikia.nocookie.net/disney/images/3/3f/90%27s_Adventure_Bear_profile.png"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"https://api.disneyapi.dev/characters/12"</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre>
<h3 id="${"apis-used-by-previous-students"}"><a aria-hidden="${"true"}" tabindex="${"-1"}" href="${"#apis-used-by-previous-students"}"><span class="${"icon icon-link"}"></span></a>APIs used by previous students</h3>
<p>This does not guarantee these APIs are suitable for this assignment, but past students have had at least limited success using them:</p>
<ul><li><a href="${"https://ffxivcollect.com/"}" rel="${"nofollow"}">FFXIV Collect</a> - Final Fantasy XIV data on collectables</li>
<li><a href="${"https://jikan.moe/"}" rel="${"nofollow"}">Jikan</a> - Unofficial MyAnimeList API</li>
<li><a href="${"https://github.com/gadhagod/Hyrule-Compendium-API"}" rel="${"nofollow"}">Hyrule Compendium</a> - Data on all interactive items from The Legend of Zelda: BOTW</li>
<li><a href="${"https://fakestoreapi.com/"}" rel="${"nofollow"}">FakeStoreAPI</a> - Fake store rest API for your e-commerce or shopping website prototype</li>
<li><a href="${"https://ghibliapi.herokuapp.com/"}" rel="${"nofollow"}">Studio Ghibli</a> - Resources from Studio Ghibli films</li>
<li><a href="${"https://developer.clashroyale.com/"}" rel="${"nofollow"}">Clash Royale</a> - Clash Royale Game Information<ul><li>API Key</li></ul></li>
<li><a href="${"https://zoo-animal-api.herokuapp.com/"}" rel="${"nofollow"}">Zoo Animals</a> - Facts and pictures of zoo animals</li>
<li><a href="${"https://digimon-api.vercel.app/"}" rel="${"nofollow"}">Digimon Information</a> -	Provides information about digimon creatures</li>
<li><a href="${"https://finalspaceapi.com/docs/"}" rel="${"nofollow"}">Final Space</a> -	Final Space API</li>
<li><a href="${"https://www.dnd5eapi.co/docs/"}" rel="${"nofollow"}">Dungeons and Dragons</a> -	Reference for 5th edition spells, classes, monsters, and more<ul><li>No CORS</li></ul></li>
<li><a href="${"http://www.tvmaze.com/api"}" rel="${"nofollow"}">TVMaze</a> -	TV Show Data</li>
<li><a href="${"https://rickandmortyapi.com/"}" rel="${"nofollow"}">Rick and Morty</a> -	All the Rick and Morty information, including images</li>
<li><a href="${"https://api.nasa.gov/"}" rel="${"nofollow"}">NASA</a> -	NASA data, including imagery<ul><li>No CORS</li></ul></li>
<li><a href="${"http://deckofcardsapi.com/"}" rel="${"nofollow"}">Deck of Cards</a> -	Deck of Cards</li>
<li><a href="${"https://openlibrary.org/developers/api"}" rel="${"nofollow"}">Open Library</a> -	Books, book covers and related data<ul><li>No CORS</li></ul></li>
<li><a href="${"https://disneyapi.dev/"}" rel="${"nofollow"}">Disney</a> -	Information of Disney characters</li>
<li><a href="${"https://hp-api.herokuapp.com/"}" rel="${"nofollow"}">Harry Potter Characters</a> -	Harry Potter Characters Data with with imagery</li>
<li><a href="${"https://randomuser.me/"}" rel="${"nofollow"}">RandomUser</a> -Generates and list user data</li>
<li><a href="${"https://imgflip.com/api"}" rel="${"nofollow"}">Imgflip</a> -	Gets an array of popular memes</li>
<li><a href="${"https://metmuseum.github.io/"}" rel="${"nofollow"}">Metropolitan Museum of Art</a><ul><li>No CORS</li></ul></li></ul>`;
});

export { Individual_project as default, metadata };
